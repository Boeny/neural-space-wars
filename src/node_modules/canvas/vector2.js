export default class Vector2 {
	constructor(x, y){
		this.x = x || 0;
		this.y = y || 0;
	}
	
	clone(){
		return new Vector2(this.x, this.y);
	}
	
	check(v){
		if (!v) return new Vector2();
		if (v instanceof Array) return new Vector2(v[0], v[1]);
		if (typeof v != 'object') return new Vector2(v, v);
		return v;
	}
	
	add(v){
		v = this.check(v);
		this.x += v.x;
		this.y += v.y;
		return this;
	}
	sub(v){
		v = this.check(v);
		this.x -= v.x;
		this.y -= v.y;
		return this;
	}
	mult(v){
		v = this.check(v);
		this.x *= v.x;
		this.y *= v.y;
		return this;
	}
	normalize(){
		this.mult(1.0 / this.length);
		return this;
	}
	
	equals(v){
		return this.x == v.x && this.y == v.y;
	}
	
	get sqrLength(){
		return this.x * this.x + this.y * this.y;
	}
	get length(){
		return Math.sqrt(this.sqrLength);
	}
	
	toString(){
		return '(' + this.x + ', ' + this.y + ')';
	}
	
	rotate(center, newAngle){
		let len = this.sub(center).length;
		this.normalize();
		
		let cos = Math.cos( newAngle );
		let sin = Math.sin( newAngle );
		this.x = cos * this.x - sin * this.y;
		this.y = sin * this.x + cos * this.y;
		
		return this.mult(len).add(center);
	}
}
